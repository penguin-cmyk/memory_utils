searchState.loadedDescShard("memory_utils", 0, "Convenience wrapper that accepts a human-readable pattern …\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the CPU context (registers) of a specific thread …\nRetrieves all threads IDs associated with the target …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new Process handler with the given in Process ID.\nScans the memory of a given process for a pattern using a …\nGet the PID of a process by its executable name (e.g., “…\nConverts a <code>ProtectOptions</code> variant into the corresponding …\nThis function uses <code>process.read_memory</code> and returns the …\nThis function uses <code>process.read_memory</code> and returns the …\nThis function uses <code>process.read_memory</code> and returns the …\nReads memory of type <code>T</code> from another process given a PID …\nReads a portion of the stack memory of the specified …\nReads a null-terminated UTF-8 string from another process…\nResumes all threads of the target process.\nResumes a specific thread by its thread ID.\nSuspends all threads of the target process.\nSuspends a specific thread by its thread ID.\nExplanation\nWrites a value of type <code>T</code> into another process’s memory.")